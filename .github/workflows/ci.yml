name: Run Tests

on:
  push:
    branches:
      - ranjan

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - "5432:5432"

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up environment variables
        run: |
          echo "DB_NAME=${{ secrets.POSTGRES_DB }}" >> $GITHUB_ENV
          echo "DB_USER=${{ secrets.POSTGRES_USER  }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.POSTGRES_PASSWORD  }}" >> $GITHUB_ENV
          echo "DB_HOST=${{ secrets.POSTGRES_HOST }}" >> $GITHUB_ENV

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8  # Adjust as per your project requirements

      # Cache pip dependencies
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      # Run pytest for testing
      - name: Run tests
        env:
          DATABASE_URL: "postgres://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}#@hobbyhivedev.postgres.database.azure.com:5432/${{ secrets.POSTGRES_DB }}"
          DJANGO_SETTINGS_MODULE: "hobby_hive.testing"        
        run: |
          python manage.py makemigrations hhMain
          python manage.py makemigrations hhPosts
          python manage.py migrate
          python manage.py test
